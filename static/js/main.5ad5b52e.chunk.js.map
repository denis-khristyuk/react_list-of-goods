{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","showList","setState","reverseList","sortByLength","LENGTH","sortByAlphabet","ALPHABET","resetList","this","visibleGoods","goods","sort","firstGood","secondGood","localeCompare","length","reverse","getReorderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,kFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,mBAAAA,I,wBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEC,SAAW,WACT,EAAKC,SAAS,CAAEL,WAAW,KAR/B,EAWEM,YAAc,WACZ,EAAKD,UAAS,SAAAN,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBAbzB,EAiBEM,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUN,EAASY,UAlBvC,EAqBEC,eAAiB,WACf,EAAKJ,SAAS,CAAEH,SAAUN,EAASc,YAtBvC,EAyBEC,UAAY,WACV,EAAKN,SAAS,CACZJ,YAAY,EACZC,SAAUN,EAASO,QA5BzB,4CAgCE,WAAU,IAAD,OACP,EAA4CS,KAAKb,MAAzCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SAEzBW,EAtEV,SACEC,EACAZ,EACAD,GAGA,IAAMY,EAAY,YAAOC,GAmBzB,OAjBAD,EAAaE,MAAK,SAACC,EAAWC,GAC5B,OAAQf,GACN,KAAKN,EAASc,SACZ,OAAOM,EAAUE,cAAcD,GAEjC,KAAKrB,EAASY,OACZ,OAAOQ,EAAUG,OAASF,EAAWE,OAEvC,QACE,OAAO,MAITlB,GACFY,EAAaO,UAGRP,EA6CgBQ,CACnBxB,EACAK,EACAD,GAGF,OACE,qBAAKqB,UAAU,MAAf,SACItB,EAUE,qCACE,wBACEuB,KAAK,SACLD,UAAU,SACVE,QAASZ,KAAKH,eAHhB,iCAQA,wBACEc,KAAK,SACLD,UAAU,SACVE,QAASZ,KAAKL,aAHhB,4BAQA,wBACEgB,KAAK,SACLD,UAAU,SACVE,QAASZ,KAAKN,YAHhB,qBAQA,wBACEiB,KAAK,SACLD,UAAU,SACVE,QAASZ,KAAKD,UAHhB,mBAQA,oBAAIW,UAAU,QAAd,SACGT,EAAaY,KAAI,SAAAC,GAAI,OACpB,oBACEJ,UAAU,cADZ,SAIGI,GAFIA,WA7Cb,wBACEH,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKpB,YAHtB,yBA7CZ,GAAyBuB,IAAMC,WCxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5ad5b52e.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  LENGTH,\n  ALPHABET,\n}\n\n// Use this function in the render method\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  // Not to mutate the original array\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstGood, secondGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return firstGood.localeCompare(secondGood);\n\n      case SortType.LENGTH:\n        return firstGood.length - secondGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  showList = () => {\n    this.setState({ isStarted: true });\n  };\n\n  reverseList = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  resetList = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isStarted, isReversed, sortType } = this.state;\n\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      sortType,\n      isReversed,\n    );\n\n    return (\n      <div className=\"App\">\n        {!isStarted\n          ? (\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => this.showList()}\n            >\n              Start\n            </button>\n          ) : (\n            <>\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={this.sortByAlphabet}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={this.sortByLength}\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={this.reverseList}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={this.resetList}\n              >\n                Reset\n              </button>\n\n              <ul className=\"Goods\">\n                {visibleGoods.map(good => (\n                  <li\n                    className=\"Goods__item\"\n                    key={good}\n                  >\n                    {good}\n                  </li>\n                ))}\n              </ul>\n            </>\n\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}